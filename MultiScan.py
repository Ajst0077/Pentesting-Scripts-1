# Author: Tyler Price

# Multi Threaded Python Port Scanner

import socket
import threading
from Queue import Queue
import time

lock = threading.Lock()

def Scanner(port):

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    try:

        con = s.connect((host, port))
        
        with lock:
            
            if port == 20:

                print "Port 21: FTP {OPEN}"

            if port == 21:

                print "Port 21: FTP (Control) {OPEN}"

            if port == 22:

                print "Port 22: SSH {OPEN}"

            if port == 23:

                print "Port 23: TELNET {OPEN}"

            if port == 25:

                print "Port 25: SMTP (RELAY) {OPEN}"

            if port == 37:

                print "Port 37: TIME {OPEN}"

            if port == 42:

                print "Port 42: WINS {OPEN}"
                
            if port == 53:

                print "Port 53: DNS {OPEN}"
                
            if port == 80:
                
                print "Port 80: HTTP {OPEN}"

            if port == 81:

                print "Port 81: HTTP {OPEN}"

            if port == 88:

                print "Port 88: KERBEROS {OPEN}"

            if port == 107:

                print "Port 107: TELNET (REMOTE) {OPEN}"

            if port == 109:

                print "Port 109: POP2 {OPEN}"

            if port == 110:

                print "Port 110: POP3 {OPEN}"

            if port == 111:

                print "Port 111: Sun RPC/Portmapper (Linux) {OPEN}"

            if port == 119:

                print "Port 119: NNTP {OPEN}"

            if port == 135:

                print "Port 135: DCE {OPEN}"

            if port == 137:

               print "Port 137: NETBIOS (NAME SERVICE) {OPEN}"

            if port == 138:

                print "Port 138: NETBIOS (DATAGRAM) {OPEN}"

            if port == 139:

                print "Port 139: NETBIOS (SESSION) {OPEN}"

            if port == 143:

                print "Port 143: IMAP {OPEN}"

            if port == 156:

                print "Port 156: MYSQL {OPEN}"

            if port == 161:

                print "Port 161: SNMP {OPEN}"

            if port == 162:

                print "Port 162: SNMP {OPEN}"

            if port == 194:

                print "Port 194: IRC {OPEN}"

            if port == 311:

                print "Port 311: MAC OSX SERVER ADMIN {OPEN}"

            if port == 389:

                print "Port 389: LDAP {OPEN}"

            if port == 433:

                print "Port 433: NNSP {OPEN}"

            if port == 443:

                print "Port 443: HTTPS {OPEN}"

            if port == 444:

                print "Port 444: SNPP {OPEN}"

            if port == 445:

                print "Port 445: Microsoft SMB {OPEN}"

            if port == 513:

                print "Port 513: RLOGIN {OPEN}"

            if port == 512:

                print "Port 512: Rexec {OPEN}"

            if port == 514:

                print "Port 514: SHELL {OPEN}"

            if port == 530:

                print "Port 530: RPC {OPEN}"

            if port == 548:

                print "Port 458: Apple Filling Protocol (AFP) {OPEN}"

            if port == 563:

                print "Port 563: NNTPS {OPEN}"

            if port == 587:

                print "Port 587: SMTP (SUBMISSION) {OPEN}"

            if port == 705:

                print "Port 705: AGENTX {OPEN}"

            if port == 8080:

                print "Port 8080: HTTP {OPEN}"

            if port == 902:

                print "Port 902: VMWARE SERVER CONSOLE {OPEN}"

            if port == 912:

                print "Port 912: APEX RELAY {OPEN}"

            if port == 1025:

                print "Port 1025: NFS {OPEN}"

            if port == 1080:

                print "Port 1080: SOCKS5 {OPEN}"

            if port == 6667:

                print "Port 6667: IRC {OPEN}"
            
        con.close()

    except:
        
        pass


def Worker():

    while True:

        worker = q.get()

        Scanner(worker)

        q.task_done()


host = raw_input("Enter Host to Scan: ")

host = socket.gethostbyname(host)

number_of_threads = int(raw_input("Enter Number of Threads: "))

q = Queue()
 
for x in range(number_of_threads + 1):

    t = threading.Thread(target=Worker, args=())

    t.daemon = True

    t.start()

for worker in range(1,1024 + 1):

    q.put(worker)
    
q.join()

print "Scan Completed!"
